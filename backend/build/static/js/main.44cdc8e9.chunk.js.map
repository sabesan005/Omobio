{"version":3,"sources":["stores/UserStore.js","stores/InputField.js","stores/SubmitButton.js","stores/LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","length","setState","fetch","method","headers","Accept","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","setInputValue","doLogin","App","userName","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44cdc8e9.chunk.js","sourcesContent":["import { extendObservable } from \"mobx\";\r\n\r\n/*sdklm*/\r\n\r\nclass UserStore {\r\n  constructor() {\r\n    extendObservable(this, {\r\n      loading: true,\r\n      isLoggedIn: false,\r\n      username: \"\",\r\n    });\r\n  }\r\n}\r\n\r\nexport default new UserStore();\r\n","import React from \"react\";\r\n\r\nclass InputField extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"inputField\">\r\n        <input\r\n          className=\"input\"\r\n          type={this.props.type}\r\n          placeholder={this.props.placeholder}\r\n          value={this.props.value}\r\n          onChange={(e) => this.props.onChange(e.target.value)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\n\r\nclass SubmitButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"submitButton\">\r\n        <button\r\n          className=\"btn\"\r\n          disabled={this.props.disabled}\r\n          onClick={() => this.props.onClick()}\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubmitButton;\r\n","import React, { isValidElement } from \"react\";\r\nimport InputField from \"./InputField\";\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport UserStore from \"./UserStore\";\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      buttonDisabled: false,\r\n    };\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    val = val.trim();\r\n    if (val.length > 12) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      [property]: val,\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      username: \"\",\r\n      password: \"\",\r\n      buttonDisabled: false,\r\n    });\r\n  }\r\n\r\n  async doLogin() {\r\n    if (!this.state.username) {\r\n      return;\r\n    }\r\n    if (!this.state.password) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      buttonDisabled: true,\r\n    });\r\n\r\n    try {\r\n      let res = await fetch(\"/login\", {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n        }),\r\n      });\r\n\r\n      let result = await res.json();\r\n      if (result && result.success) {\r\n        UserStore.isLoggedIn = true;\r\n        UserStore.username = result.username;\r\n      } else if (result && result.success === false) {\r\n        this.resetForm();\r\n        alert(result.msg);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.resetForm();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"loginForm\">\r\n        Log in\r\n        <InputField\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={this.state.username ? this.state.username : \"\"}\r\n          onChange={(val) => this.setInputValue(\"username\", val)}\r\n        />\r\n        <InputField\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={this.state.password ? this.state.password : \"\"}\r\n          onChange={(val) => this.setInputValue(\"password\", val)}\r\n        />\r\n        <SubmitButton\r\n          text=\"Login\"\r\n          disabled={this.state.buttonDisabled}\r\n          onClick={() => this.doLogin()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport userStore from \"./stores/UserStore\";\nimport LoginForm from \"./stores/LoginForm\";\nimport SubmitButton from \"./stores/SubmitButton\";\nimport \"./App.css\";\nimport UserStore from \"./stores/UserStore\";\n\nclass App extends React.Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch(\"/isLoggedIn\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n        UserStore.userName = result.userName;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try {\n      let res = await fetch(\"/logout\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-type\": \"application/json\",\n        },\n      });\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.userName = \"\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className=\"container\">Loading, Please wait...</div>\n        </div>\n      );\n    } else {\n      if (UserStore.isLoggedIn) {\n        return (\n          <div className=\"app\">\n            <div className=\"container\">\n              Welcome {UserStore.userName}\n              <SubmitButton\n                text={\"Log out\"}\n                disabled={false}\n                onClick={() => this.doLogout}\n              />\n            </div>\n          </div>\n        );\n      }\n      return (\n        <div className=\"app\">\n          <div className=\"container\">\n            <LoginForm />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}